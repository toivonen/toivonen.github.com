{"data":{"post":{"id":"deabab55-c739-51db-a02b-597221d1c689","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/react-angular-project/index_en.md","html":"<p>Earlier this year, I participated in a development of a single page application. With the team, we started this\nproject from scratch. This situation was the most suitable to practice the new technologies.</p>\n<p>The stack I’ve tried was React + ES2015 + postcss + webpack. However, keeping in mind that most of the\nteam (who were supposed to maintain the project later) are mainly experienced in Angular, I was looking for some\nsort of combination of these frameworks.</p>\n<excerpt/>\n<p>Finally, I made a project with React used for the view and Angular governing the data layer. I\nbelieve that such project is ideal for the a bridge role. Often happens that the development team has a\nstrict deadline. There is no time to invent new rocket science approaches. However, we can introduce them gradually.</p>\n<p>For that project, I decided that we can introduce React with ES2015. The project structure is easy to refactor\ninto a React-only project in the next iterations.</p>\n<p>I cannot share the exact code of the project, but I created a dummy repository with the same structure:\n<a href=\"https://github.com/varya/angular-react-stub\">varya/angular-react-stub</a>.</p>\n<p>A new project may be forked/copied from it. After installation of the required npm packages, the development starts with\nrunning</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">npm start</code></pre>\n      </div>\n<p>It starts a local server that builds of html, js and css files related to the project. The magic\nhappens with <code class=\"language-text\">webpack</code>. Let me explain it below.</p>\n<p>For now, let’s concentrate on the file structure.</p>\n<p>A human produced code of the project is placed in the <code class=\"language-text\">src</code> folder.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">src/\n\n  _helpers/\n\n  modules/\n    menu/\n      menu.component.js\n      menu.css\n\n  pages/\n    contact/\n      contact.ctrl.js\n      contact.html\n\n  index.html\n  index.js</code></pre>\n      </div>\n<p>The <a href=\"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/index.js\">index.js</a> file\nis ‘entering point’ of the building process. Here, the webpack finds out what the modules required for the\napp are.</p>\n<p>In this file, I create an Angular application and define the rules for routing. Roughly, each routing path corresponds\nto its page. It takes a page template (an <code class=\"language-text\">html</code> file) and a page controller (a <code class=\"language-text\">js</code> module), and make them work\ntogether.</p>\n<p>To keep everything neat, I made <code class=\"language-text\">pages</code> folder, where each page has a subfolder with a template\nand a controller.</p>\n<p>The controller is normal Angular code. It manipulates the data for future usage in the view. Also, controller is\nresponsible for extraction the data fromthe server and any transformation of it.</p>\n<p>However, the given example contains no such\nheavy code. Anyway, you can see how the <code class=\"language-text\">$scope</code> is filled in\n<a href=\"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/pages/components/components.ctrl.js\">pages/components/components.ctrl.js</a>.</p>\n<p>The data from <code class=\"language-text\">$scope</code> is accessible in the template. From <a href=\"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/pages/components/components.html\">pages/components/components.html</a>\nyou can see how it is passed down to the only used Angular directive, <code class=\"language-text\">react-component</code>. This directive is a bridge\nbetween Angular-cooked data and React-operated view. In the directive you declare what React component to render and\npass the properties to it. After that, the React component operates independently from the Angular.</p>\n<h2 id=\"modules\"><a href=\"#modules\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Modules</h2>\n<p>There is a special <code class=\"language-text\">modules</code> folder at the same level as <code class=\"language-text\">pages</code>. It contains all the React modules used in the\napplication. The modules can be complex and include other modules. However, the file structure is flat. Each component\nis represented by a folder with its JavaScript file and any other related content inside. Often, it is CSS, however\nthe pictures and other required stuff may be in the same folder.</p>\n<p>You can check out a typical component code in the file\n<a href=\"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/modules/menu/menu.component.js\">modules/menu/menu.component.js</a>.</p>\n<p>Note that the required CSS is imported in the JavaScript as</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">import styles from &#39;./menu.css&#39;;</code></pre>\n      </div>\n<p>This is one of the webpack’s features which makes developing with it so awesome. A component declares the CSS it uses.\nThen, the bundled CSS is built according to these declarations. In refactoring, the process will\nautomatically exclude out-of-date CSS if its module is no longer in use.</p>\n<p><a href=\"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/webpack.config.js\">webpack.config.js</a>\nstores the data what files to process and how to do it.\nIt gets the file types from their extensions. Thus, <code class=\"language-text\">*.js</code> and <code class=\"language-text\">*.jsx</code> files are ES2015 and transform\ninto plain JavaScript. <code class=\"language-text\">*.html</code> files are inserted as raw strings. This is why they can be used as Angular templates.\n<code class=\"language-text\">*.css</code> files are required as styles but first transform with Postcss. I also use <code class=\"language-text\">precss</code> as a plugin, which\nmakes possible to enjoy most of the usual pre-processing features.</p>\n<p>This covers pretty much all about the basic structure. A real project can use external libraries and modules as\nwell as have more complex building process. But here is its starting point: <a href=\"https://github.com/varya/angular-react-stub/\">varya/angular-react-stub</a>.</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Earlier this year, I participated in a development of a single page application. With the team, we started this\nproject from scratch. This situation was the most suitable to practice the new technologies."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The stack I’ve tried was React + ES2015 + postcss + webpack. However, keeping in mind that most of the\nteam (who were supposed to maintain the project later) are mainly experienced in Angular, I was looking for some\nsort of combination of these frameworks."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"excerpt","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Finally, I made a project with React used for the view and Angular governing the data layer. I\nbelieve that such project is ideal for the a bridge role. Often happens that the development team has a\nstrict deadline. There is no time to invent new rocket science approaches. However, we can introduce them gradually."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For that project, I decided that we can introduce React with ES2015. The project structure is easy to refactor\ninto a React-only project in the next iterations."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I cannot share the exact code of the project, but I created a dummy repository with the same structure:\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub"},"children":[{"type":"text","value":"varya/angular-react-stub"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A new project may be forked/copied from it. After installation of the required npm packages, the development starts with\nrunning"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"text","value":"\n      "},{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"npm start"}]}]},{"type":"text","value":"\n      "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It starts a local server that builds of html, js and css files related to the project. The magic\nhappens with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"webpack"}]},{"type":"text","value":". Let me explain it below."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For now, let’s concentrate on the file structure."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A human produced code of the project is placed in the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"src"}]},{"type":"text","value":" folder."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"text","value":"\n      "},{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"src/\n\n  _helpers/\n\n  modules/\n    menu/\n      menu.component.js\n      menu.css\n\n  pages/\n    contact/\n      contact.ctrl.js\n      contact.html\n\n  index.html\n  index.js"}]}]},{"type":"text","value":"\n      "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/index.js"},"children":[{"type":"text","value":"index.js"}]},{"type":"text","value":" file\nis ‘entering point’ of the building process. Here, the webpack finds out what the modules required for the\napp are."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this file, I create an Angular application and define the rules for routing. Roughly, each routing path corresponds\nto its page. It takes a page template (an "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"html"}]},{"type":"text","value":" file) and a page controller (a "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"js"}]},{"type":"text","value":" module), and make them work\ntogether."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To keep everything neat, I made "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"pages"}]},{"type":"text","value":" folder, where each page has a subfolder with a template\nand a controller."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The controller is normal Angular code. It manipulates the data for future usage in the view. Also, controller is\nresponsible for extraction the data fromthe server and any transformation of it."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However, the given example contains no such\nheavy code. Anyway, you can see how the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$scope"}]},{"type":"text","value":" is filled in\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/pages/components/components.ctrl.js"},"children":[{"type":"text","value":"pages/components/components.ctrl.js"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The data from "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$scope"}]},{"type":"text","value":" is accessible in the template. From "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/pages/components/components.html"},"children":[{"type":"text","value":"pages/components/components.html"}]},{"type":"text","value":"\nyou can see how it is passed down to the only used Angular directive, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"react-component"}]},{"type":"text","value":". This directive is a bridge\nbetween Angular-cooked data and React-operated view. In the directive you declare what React component to render and\npass the properties to it. After that, the React component operates independently from the Angular."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"modules"},"children":[{"type":"element","tagName":"a","properties":{"href":"#modules","ariaHidden":true,"className":["anchor"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Modules"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There is a special "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"modules"}]},{"type":"text","value":" folder at the same level as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"pages"}]},{"type":"text","value":". It contains all the React modules used in the\napplication. The modules can be complex and include other modules. However, the file structure is flat. Each component\nis represented by a folder with its JavaScript file and any other related content inside. Often, it is CSS, however\nthe pictures and other required stuff may be in the same folder."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can check out a typical component code in the file\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/src/modules/menu/menu.component.js"},"children":[{"type":"text","value":"modules/menu/menu.component.js"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the required CSS is imported in the JavaScript as"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"text","value":"\n      "},{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"import styles from './menu.css';"}]}]},{"type":"text","value":"\n      "}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is one of the webpack’s features which makes developing with it so awesome. A component declares the CSS it uses.\nThen, the bundled CSS is built according to these declarations. In refactoring, the process will\nautomatically exclude out-of-date CSS if its module is no longer in use."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub/blob/3870766a28adb61fc2f1fc86fbfbe538c00da1f9/webpack.config.js"},"children":[{"type":"text","value":"webpack.config.js"}]},{"type":"text","value":"\nstores the data what files to process and how to do it.\nIt gets the file types from their extensions. Thus, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"*.js"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"*.jsx"}]},{"type":"text","value":" files are ES2015 and transform\ninto plain JavaScript. "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"*.html"}]},{"type":"text","value":" files are inserted as raw strings. This is why they can be used as Angular templates.\n"},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"*.css"}]},{"type":"text","value":" files are required as styles but first transform with Postcss. I also use "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"precss"}]},{"type":"text","value":" as a plugin, which\nmakes possible to enjoy most of the usual pre-processing features."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This covers pretty much all about the basic structure. A real project can use external libraries and modules as\nwell as have more complex building process. But here is its starting point: "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/varya/angular-react-stub/"},"children":[{"type":"text","value":"varya/angular-react-stub"}]},{"type":"text","value":"."}]}]}],"data":{"quirksMode":false}},"fields":{"slug":"en/posts/react-angular-project/","prefix":"","disqusIdentifier":"posts-react-angular-project-index-en"},"frontmatter":{"title":"Simple React Angular project","subTitle":null,"date":"19 May 2016","v2":true,"old":null,"tumblr":null,"meta":{"desc":"The detailed explanation of React+Angular starting project. Optimal bridge to React, ES2015 and webpack for the developers with Angular background.\n"},"cover":{"childImageSharp":{"resize":{"src":"/static/22f280d115e6ca3eb25ba515f8d9130f/160fa/thumb.png"}}}}},"authornote":{"id":"dd5d1bd7-6054-5e12-ab26-4100aefbc659","html":"<p><strong>Mr. Gatsby</strong> Proin ornare ligula eu tellus tempus elementum. Aenean <a href=\"/\">bibendum</a> iaculis mi, nec blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus. Blandit lacus interdum vitae. Vestibulum non nibh risus, a scelerisque purus.</p>"},"site":{"siteMetadata":{"siteUrl":"http://varya.me/"}}},"pageContext":{"slug":"en/posts/react-angular-project/","prev":{"id":"79aa1e0d-f5f1-523e-a87a-147d4828e4a4","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/platforms-create-value/index.md","fields":{"slug":"blog/platforms-create-value/","prefix":"","lang":"en","disqusIdentifier":"blog-platforms-create-value","level":1},"frontmatter":{"title":"How business platforms can create new value?","subTitle":null,"v2":null,"old":null}},"next":{"id":"af7b45d7-36d5-51a4-955d-fc7f02325aea","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/patterned-triangle/index_en.md","fields":{"slug":"en/posts/patterned-triangle/","prefix":"","lang":"en","disqusIdentifier":"en-issues-patterned-triangle","level":1},"frontmatter":{"title":"Patterned triangles with  CSS","subTitle":null,"v2":null,"old":true}}}}