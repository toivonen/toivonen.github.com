{"componentChunkName":"component---src-components-layout-layout-post-js","path":"/en/posts/javascript-in-bemjson/","result":{"data":{"mdx":{"id":"35bf7572-c4c4-5975-b0e7-43dc3b12636a","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JavaScript in BEMJSON\",\n  \"categories\": \"en issues\",\n  \"old\": true,\n  \"date\": \"2014-01-21T00:00:00.000Z\",\n  \"layout\": \"post\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We usually start developing a web site prototyping the interface and then\\nimplementing HTML/CSS and bacis JavaScript. In case\\nof using the full BEM stack a tranformation from prototype to a functioning web\\nsite goes smoothly. You can clone the project from\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/bem/project-stub\"\n  }), \"project-stub\"), \" and create a static web page\\nas it was \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://bem.info/articles/start-with-project-stub/\"\n  }), \"described\\nearlier\"), \".\"), mdx(\"excerpt\", null), mdx(\"p\", null, \"Thanks to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BEMHTML\"), \" templates, you do not need write all the HTML manually.\\nDescribing page sructure in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BEMJSON\"), \" rather than writing all the tags manually\\nsaves time. But sometimes this is still a lot of work to do, especially for large\\npages.\"), mdx(\"p\", null, \"Luckily BEMJSON can include JavaScript pieces to produce some blocks dymamically.\\nI created an example of such usage:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"({\\n    block: 'page',\\n    ...\\n    content:[\\n        ...\\n        {\\n            block: 'content',\\n            content: (function() {\\n                var res = [];\\n                for(var i = 0; i < 10; i++) {\\n                    res.push({\\n                        block: 'button',\\n                        content: 'Button ' + (i + 1)\\n                    });\\n                }\\n                return res;\\n            })()\\n        },\\n        ...\\n    ]\\n})\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/varya/dynamic-bemjson/blob/master/desktop.bundles/page1/page1.bemjson.js\"\n  }), \"full\\ncode\")), mdx(\"p\", null, \"This JavaScript creates 10 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"button\"), \" blocks when the page is being built with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bem-tools\"), \".\\nCheck the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://varya.me/dynamic-bemjson/desktop.bundles/page1/page1.html\"\n  }), \"result\\npage\"), \"\\nto see them.\"), mdx(\"p\", null, \"Another example is a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"menu\"), \" block. Such interface pieces usually consist of a\\nlot of items with minor differences which cases a lot of copy-paste on a page.\\nWith JavaScript in BEMJSON this can be easily reduced.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"({\\n    block: 'page',\\n    ...\\n    content:[\\n        ...\\n        {\\n            block: 'menu',\\n            content: [\\n                {\\n                    title: 'Index',\\n                    isSelected: false,\\n                },\\n                {\\n                    title: 'Products',\\n                    isSelected: true\\n                },\\n                {\\n                    title: 'Contact',\\n                    isSelected: false\\n                }\\n            ].map(function(item){\\n                var block = {\\n                    block: 'menu',\\n                    elem: 'item',\\n                    content: item.title,\\n                    mods: {\\n                        selected: item.isSelected\\n                    }\\n                };\\n                return block;\\n            })\\n        },\\n        ...\\n    ]\\n})\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/varya/dynamic-bemjson/blob/master/desktop.bundles/page2/page2.bemjson.js\"\n  }), \"full\\ncode\")), mdx(\"p\", null, \"This gives a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://varya.me/dynamic-bemjson/desktop.bundles/page2/page2.html\"\n  }), \"page with a menu of 3 items\"), \".\\nThe bigger is the array of items, the more you save. Especially when the structure\\nof every item changes while developing.\"), mdx(\"p\", null, \"Indeed, this feature is not needed when BEMJSON is a result of 1st layer templates\\n(like BEMTREE, priv.js) you can produce as much BEMJSON as is necessary. But with\\ninitial development of a static web page, the JavaScript tricks help to avoid\\ncopy-paste.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"readingTime":{"minutes":1.835},"slug":"en/posts/javascript-in-bemjson/","prefix":"","disqusIdentifier":"en-issues-javascript-in-bemjson"},"frontmatter":{"title":"JavaScript in BEMJSON","subTitle":null,"date":"21 January 2014","v2":null,"old":true,"tumblr":null,"meta":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"http://varya.me"}}},"pageContext":{"slug":"en/posts/javascript-in-bemjson/","prev":{"id":"1b5dcacf-0515-5e59-9f99-05ef689ca73a","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/javascript-in-bemjson/index_ru.md","fields":{"slug":"ru/posts/javascript-in-bemjson/","prefix":"","lang":"ru","disqusIdentifier":"ru-issues-javascript-in-bemjson","level":1,"fileRelativePath":"javascript-in-bemjson/index_ru.md"},"frontmatter":{"title":"JavaScript Ð² BEMJSON","subTitle":null,"v2":null,"old":true,"date":"2014-01-21T00:00:00.000Z","layout":"post"}},"next":{"id":"a2ea739e-19ea-568a-b18a-4e4090e4c27e","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/jira-hypothesis/index.md","fields":{"slug":"blog/jira-hypothesis/","prefix":"","lang":"en","disqusIdentifier":"blog-jira-hypothesis","level":1,"fileRelativePath":"jira-hypothesis/index.md"},"frontmatter":{"title":"Checking your JIRA hypothesis","subTitle":null,"v2":null,"old":null,"date":"2020-02-04T00:00:00.000Z","layout":"post"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/javascript-in-bemjson/index_en.md"}}}