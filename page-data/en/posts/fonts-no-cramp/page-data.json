{"componentChunkName":"component---src-components-layout-layout-post-js","path":"/en/posts/fonts-no-cramp/","result":{"data":{"mdx":{"id":"bcdb695a-fcde-59a1-b07e-6fa9b20759c7","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Custom fonts with no cramp\",\n  \"categories\": \"en issues\",\n  \"old\": true,\n  \"date\": \"2013-11-26T00:00:00.000Z\",\n  \"layout\": \"post\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A developer using custom fonts in web (don't say this is evil) usually face a\\ndilemma.\"), mdx(\"p\", null, \"The users' main interest is the content of the page not the\\nview. It is nice to provide it as fast as possible and then apply a custom font.\\nThis blog used to work this way. I provided a script among others in the bundle\\nlinked by the end of the page.\"), mdx(\"excerpt\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"(function(d){\\n\\nfunction addFont(url, h, l) {\\nh = d.getElementsByTagName('head')[0];\\nl = d.createElement('link');\\nl.href = url;\\nl.rel = 'stylesheet';\\nh.appendChild(l);\\n}\\n\\naddFont('//fonts.googleapis.com/css?' +\\n'family=Noto+Serif&subset=latin,cyrillic-ext,cyrillic');\\n\\n})(document);\\n\")), mdx(\"p\", null, \"The drawback is obvious. Once a font is loaded and apllied, a user notice\\ntwitching as a page is being re-rendering. It is recommended to define a\\nsuitable system font in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"font-face\"), \". But there never is a good fit.\\nOtherwise there was no need in a custom font.\"), mdx(\"p\", null, \"The only way to avoid the font rendering jerk is to provide the font in advance.\\nWith inlining a base64 of a font into CSS and linking it in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<head>\"), \" no\\ntwitching is guaranteed as well as increasing page loading time.\"), mdx(\"p\", null, \"For a while I was deciding between the two variants until my colleague \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://kizu.ru/en/\"\n  }), \"Roman\\nKomarov aka kizu\"), \" suggested an elegant solution which is in\\nuse right now.\"), mdx(\"p\", null, \"At the first time a user opens any page of this site, a CSS with the font is\\nloaded and stored as a piece of text in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localStorage\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"$(function(){\\n\\n    if (typeof(Storage) === 'undefined') {\\n        return;\\n    }\\n    if (localStorage.getItem('varya.me.fonts') === null) {\\n\\n        $.ajax({\\n            url: '../../data/fonts.css',\\n            success: function(response){\\n                localStorage.setItem('varya.me.fonts', response);\\n            },\\n            dataType: 'text'\\n        });\\n\\n    }\\n\\n});\\n\")), mdx(\"p\", null, \"But I do not apply this CSS after loading. So, not jerks. As request is only to\\nfill up the storage, it goes after the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"domReady\"), \".\"), mdx(\"p\", null, \"By the time of requesting the next page the custom font is already in the user's\\ncomputer. Checking that it is available I apply it to the page. The faster the\\nbetter, and as the action costs almost nothing an inline \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<head>\"), \" script goes\\nhere.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"(function(d, s, l, r) {\\nif (typeof(s) !== 'undefined' && l.getItem('varya.me.fonts')) {\\n    r = [\\n        '<style>',\\n        l.getItem('varya.me.fonts'),\\n        '</style>'\\n    ];\\n    document.write(r.join(''));\\n}\\n\\n})(document, Storage, localStorage);\\n\")), mdx(\"p\", null, \"With that the blog looks as it should do with 2+ pages loaded. I consider this\\nprice for no-twitching custom font as reasonable.\"), mdx(\"p\", null, \"Any ideas of making it even better?\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"readingTime":{"minutes":2.065},"slug":"en/posts/fonts-no-cramp/","prefix":"","disqusIdentifier":"en-issues-fonts-no-cramp"},"frontmatter":{"title":"Custom fonts with no cramp","subTitle":null,"date":"26 November 2013","v2":null,"old":true,"tumblr":null,"meta":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"http://varya.me"}}},"pageContext":{"slug":"en/posts/fonts-no-cramp/","prev":{"id":"eaf13c81-98c4-5dfb-bc60-f3f3d1247b5a","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/first-steroids-app/index_ru.md","fields":{"slug":"ru/posts/first-steroids-app/","prefix":"","lang":"ru","disqusIdentifier":"ru-issues-first-steroids-app","level":1,"fileRelativePath":"first-steroids-app/index_ru.md"},"frontmatter":{"title":"Мобильное приложение на Steroids","subTitle":null,"v2":null,"old":true,"date":"2014-04-02T00:00:00.000Z","layout":"post"}},"next":{"id":"e8e76479-12f9-5415-b462-407c6cc1214b","fileAbsolutePath":"/Users/varya/WebDev/Personal/varya.github.com/content/posts/frontend-babel-first-week/index_ru.md","fields":{"slug":"ru/posts/frontend-babel-first-week/","prefix":"","lang":"ru","disqusIdentifier":"posts-frontend-babel-first-week-index-ru","level":1,"fileRelativePath":"frontend-babel-first-week/index_ru.md"},"frontmatter":{"title":"Первая неделя Frontend Babel","subTitle":null,"v2":true,"old":null,"date":"2014-06-02T00:00:00.000Z","layout":"post"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/fonts-no-cramp/index_en.md"}}}